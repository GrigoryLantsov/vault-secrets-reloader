{{ template "chart.header" . }}

This chart will install Vault Secrets Reloader Controller, that reloads workloads on a referenced secret change in HashiCorp Vault.

Reloader will collect (unversioned) secrets injected by the Webhook from watched workloads, periodically checks if their version has been updated in Vault and if so, "reloads" the workload with an annotation update, triggering a new rollout so the Webhook can inject the new version of the secret into the pod.

## Before you start

Reloader works in conjunction with the [Vault Secrets Webhook](https://github.com/bank-vaults/vault-secrets-webhook), therefore the prerequisites to start using it would be a Hashicorp Vault instance, and a working Webhook.

You will need to add the following annotations to the pod template spec of the workloads (i.e. Deployments, DaemonSets and StatefulSets) that you wish to reload:

```yaml
alpha.vault.security.banzaicloud.io/reload-on-secret-change: "true"
```

## Installing the Chart

**Prepare Kubernetes namespace**

You can prepare a separate namespace for Vault Secrets Reloader beforehand, create it automatically if not yet exist with appending `--create-namespace` to the installation Helm command, or just use the one already created for Vault Secrets Webhook.

**Install the chart**

```shell
helm upgrade --install vault-secrets-reloader oci://ghcr.io/bank-vaults/vault-secrets-reloader --namespace bank-vaults-infra --create-namespace
```

{{ define "chart.valuesTableHtml" }}

The following table lists the configurable parameters of the Helm chart.

| Parameter | Type | Default | Description |
| --- | ---- | ------- | ----------- |
{{- range .Values }}
| `{{ .Key }}` | {{ .Type }} | {{ .Default }} | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} |
{{- end }}

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`.

{{ end }}

{{ template "chart.valuesSectionHtml" . }}

### Time periods

Configure the time for periodic runs of the `collector` and `reloader` workers with a value in Go Duration format:

```yaml
collectorSyncPeriod: 30m
reloaderRunPeriod: 1h
```

### Vault credentials

 Reloader needs to be supplied with Vault credentials to be able to connect to Vault in order to get the secrets. You can check the list of environmental variables accepted for creating a Vault client [here](https://developer.hashicorp.com/vault/docs/commands#environment-variables). For example:

```yaml
env:
  # define env vars for Vault used for authentication
  VAULT_ROLE: "reloader"
  VAULT_ADDR: "https://vault.default.svc.cluster.local:8200"
  VAULT_NAMESPACE: "default"
  VAULT_TLS_SECRET: "vault-tls"
  VAULT_TLS_SECRET_NS: "bank-vaults-infra"
```

In addition to that, make sure to add the `read` and `list` capabilities for secrets to the Vault auth role the Reloader will use. An example can be found in the [example Bank-Vaults Operator CR file](https://github.com/bank-vaults/vault-secrets-reloader/blob/main/e2e/deploy/vault/vault.yaml#L102).
